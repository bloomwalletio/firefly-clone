# Fastfile

default_platform(:ios)

platform :ios do
  desc "Build IPA"
  lane :build do
    Dir.chdir("../ios/App") do
      match(
        type: "appstore",
        readonly: true,
        team_id: ENV["TEAM_ID"],
        app_identifier: ENV["BUNDLE_ID"],
      )
      gym(
        scheme: "App",
        workspace: "../ios/App/App.xcworkspace",
        export_options: {
          method: "app-store",
          provisioningProfiles: {
            ENV["BUNDLE_ID"] => "YourProvisioningProfileName"
          }
        }
      )
      app_store_connect_api_key(
        key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
        issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
        key_filepath: ENV["APP_STORE_CONNECT_KEY_FILEPATH"],
        duration: 1200, # optional
        in_house: false, # optional but may be necessary if using match/sigh
      )
      pilot(
        skip_waiting_for_build_processing: true,
      )
    end
  end
end

platform :android do
  desc "Build AAB"
  lane :build do
    Dir.chdir("../android") do
      gradle(
        task: 'bundle',
        flavor: ENV['STAGE'],
        build_type: 'Release',
        project_dir: 'android/',
        print_command: false,
        properties: {
          "android.injected.signing.store.file" => ENV["KEYSTORE"],
          "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
          "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
          "android.injected.signing.key.password" => ENV["KEY_PASSWORD"],
        },
      )
      upload_to_play_store(
        json_key_data: ENV["JSON_KEY_DATA"],
        track: 'internal', # for testing
      )
    end
  end
end
